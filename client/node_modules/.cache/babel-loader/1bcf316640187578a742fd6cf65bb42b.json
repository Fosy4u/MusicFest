{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FosterOgwudu\\\\Desktop\\\\MyProjects\\\\MusicFest\\\\client\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Body from './Body';\nimport Footer from './Footer';\nimport './Player.css';\nimport Sidebar from './Sidebar';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport UseAuth from './UseAuth';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from '../utilities/StateProvider';\nimport Search from './Search';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi({\n  clientId: '7c94905bdafb43209c0f2b19bdcedb5e'\n});\nexport default function Player({\n  code,\n  spotify\n}) {\n  _s();\n\n  const [{\n    user,\n    token,\n    playlists,\n    active_playlist\n  }, dispatch] = useStateValue();\n  const accessToken = UseAuth(code);\n  console.log('Access token is', accessToken);\n  const history = useH;\n  useEffect(() => {\n    if (accessToken) {\n      //set access token for the spotiywebAPI\n      spotify.setAccessToken(accessToken);\n      dispatch({\n        type: 'SET_TOKEN',\n        payload: accessToken\n      });\n    }\n  }, [accessToken]);\n  useEffect(() => {\n    if (token) {\n      //get user with spotifywebAPI\n      spotify.getMe().then(user => {\n        console.log('ðŸ§”', user);\n        dispatch({\n          type: 'SET_USER',\n          payload: user\n        });\n      }); //get playlsits with spotifywebAPI\n\n      spotify.getUserPlaylists().then(playlists => dispatch({\n        type: 'SET_PLAYLISTS',\n        payload: playlists\n      }));\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player_body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/body\",\n        component: () => /*#__PURE__*/_jsxDEV(Body, {\n          spotify: spotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        component: Search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"PQqfBLJZdnrFG7HRdvy7xQwVn84=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/FosterOgwudu/Desktop/MyProjects/MusicFest/client/src/components/Player.js"],"names":["React","useEffect","Body","Footer","Sidebar","Link","Route","Switch","Home","UseAuth","SpotifyWebApi","useStateValue","Search","useHistory","spotify","clientId","Player","code","user","token","playlists","active_playlist","dispatch","accessToken","console","log","history","useH","setAccessToken","type","payload","getMe","then","getUserPlaylists"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\r\nimport Body from './Body'\r\nimport Footer from './Footer'\r\nimport './Player.css'\r\nimport Sidebar from './Sidebar';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport UseAuth from './UseAuth';\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { useStateValue } from '../utilities/StateProvider';\r\nimport Search from './Search';\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst spotify = new SpotifyWebApi({\r\n    clientId: '7c94905bdafb43209c0f2b19bdcedb5e'\r\n  });\r\n\r\nexport default function Player({code, spotify}) {\r\n    const [{user,token, playlists, active_playlist}, dispatch] = useStateValue();\r\n    const accessToken = UseAuth(code)\r\n    console.log('Access token is', accessToken)\r\n    const history = useH\r\n\r\n    useEffect(() => {\r\n        if(accessToken){\r\n            //set access token for the spotiywebAPI\r\n          spotify.setAccessToken(accessToken);\r\n            dispatch({\r\n              type: 'SET_TOKEN',\r\n              payload : accessToken\r\n            });\r\n            \r\n          \r\n            }\r\n            \r\n        \r\n    }, [accessToken])\r\n\r\n        useEffect(() => {\r\n            \r\n        if (token){\r\n            //get user with spotifywebAPI\r\n          spotify.getMe().then((user) => {console.log('ðŸ§”', user ); \r\n          dispatch({\r\n          type: 'SET_USER',\r\n          payload: user\r\n        })})\r\n      //get playlsits with spotifywebAPI\r\n        spotify.getUserPlaylists().then ((playlists) => \r\n        dispatch({\r\n          type : 'SET_PLAYLISTS',\r\n          payload: playlists\r\n      \r\n        }))\r\n        }    \r\n        }, [token])\r\n    return (\r\n        <div className='player'>\r\n            <div className='player_body'>\r\n        {/*sidebar*/}\r\n        <Sidebar/>\r\n\r\n         {/*body*/}\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route path=\"/body\" component={() => <Body spotify = {spotify}/>} />\r\n        <Route path=\"/search\" component={Search} />\r\n                    \r\n         \r\n            </div>\r\n         \r\n         {/*footer*/}\r\n         <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}