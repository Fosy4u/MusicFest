{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FosterOgwudu\\\\Desktop\\\\MyProjects\\\\MusicFest\\\\client\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Search.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Avatar } from '@material-ui/core';\nimport { useStateValue } from '../utilities/StateProvider';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nexport default function Search() {\n  _s();\n\n  var _user$images$;\n\n  const [{\n    user,\n    token\n  }, dispatch] = useStateValue();\n  const [search, setSearch] = useState('');\n  const [search__result, setSearch__result] = useState([]);\n  useEffect(() => {\n    if (token) {\n      spotify.setAccessToken(token);\n    }\n  }, [token]);\n  useEffect(() => {\n    if (!search) {\n      setSearch__result([]);\n    }\n\n    if (search) {\n      spotify.searchTracks(search).then(res => {\n        res.body.data.items.map(track => {\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri\n          };\n        });\n      });\n    }\n  }, [token, search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__left\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for Artists, Songs, or Albums\",\n          type: \"text\",\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__right\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: user === null || user === void 0 ? void 0 : (_user$images$ = user.images[0]) === null || _user$images$ === void 0 ? void 0 : _user$images$.url,\n          alt: \"FO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: user === null || user === void 0 ? void 0 : user.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__body\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"Skfzm/065rTeTuOtC6vSuo+/cSw=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/FosterOgwudu/Desktop/MyProjects/MusicFest/client/src/components/Search.js"],"names":["React","useState","useEffect","SearchIcon","Avatar","useStateValue","SpotifyWebApi","spotify","Search","user","token","dispatch","search","setSearch","search__result","setSearch__result","setAccessToken","searchTracks","then","res","body","data","items","map","track","artist","artists","name","title","uri","e","target","value","images","url","display_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;AACA,eAAe,SAASE,MAAT,GAAkB;AAAA;;AAAA;;AAC7B,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAD,EAAeC,QAAf,IAA2BN,aAAa,EAA9C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,KAAH,EAAS;AACLH,MAAAA,OAAO,CAACS,cAAR,CAAuBN,KAAvB;AACH;AACJ,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAG,CAACU,MAAJ,EAAW;AACPG,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;;AACD,QAAGH,MAAH,EAAU;AAENL,MAAAA,OAAO,CAACU,YAAR,CAAqBL,MAArB,EAA6BM,IAA7B,CAAmCC,GAAD,IAAQ;AACrCA,QAAAA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAAwBC,KAAK,IAAG;AAC7B,iBAAO;AACHC,YAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBC,IADtB;AAEHC,YAAAA,KAAK,EAAEJ,KAAK,CAACG,IAFV;AAGHE,YAAAA,GAAG,EAAGL,KAAK,CAACK;AAHT,WAAP;AAMF,SAPD;AAQJ,OATD;AAUH;AACA,GAjBQ,EAiBN,CAACnB,KAAD,EAAQE,MAAR,CAjBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAO,UAAA,WAAW,EAAE,sCAApB;AAA2D,UAAA,IAAI,EAAG,MAAlE;AAAyE,UAAA,QAAQ,EAAEkB,CAAC,IAAG;AAACjB,YAAAA,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA0B;AAAlH;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKA;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA,gCACY,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEvB,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAEwB,MAAN,CAAa,CAAb,CAAF,kDAAE,cAAiBC,GAA9B;AAAmC,UAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEY;AAAA,oBAAKzB,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAE0B;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAlDuB3B,M;UACaH,a;;;KADbG,M","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport './Search.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {Avatar} from '@material-ui/core'\r\nimport { useStateValue } from '../utilities/StateProvider';\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\nexport default function Search() {\r\n    const [{user,token}, dispatch] = useStateValue();\r\n    const [search, setSearch] = useState('')\r\n    const [search__result, setSearch__result] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            spotify.setAccessToken(token); \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n    if(!search){\r\n        setSearch__result([])\r\n    }\r\n    if(search){\r\n    \r\n        spotify.searchTracks(search).then((res) =>{\r\n             res.body.data.items.map(track =>{\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri : track.uri,\r\n                    \r\n                }\r\n             })\r\n        })\r\n    }\r\n    }, [token, search])\r\n    \r\n\r\n    return (\r\n        <div className= 'search'> \r\n            <div className=\"search__head\">\r\n                <div className=\"search__left\">\r\n                        <SearchIcon/>\r\n                        <input placeholder= 'Search for Artists, Songs, or Albums' type = 'text' onChange={e =>{setSearch(e.target.value)}}/>\r\n                </div>\r\n            <   div className=\"search__right\">\r\n                        <Avatar src={user?.images[0]?.url} alt='FO'/>\r\n                        <h4>{user?.display_name}</h4>\r\n                </div> \r\n            </div>\r\n            \r\n            <div className=\"search__body\">\r\n                <h2>Search Results</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}