{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FosterOgwudu\\\\Desktop\\\\MyProjects\\\\MusicFest\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Player from \"./components/Player\";\nimport Login from \"./components/Login\";\nimport { getTokenFromUrl } from \"./utilities/Spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./utilities/StateProvider\";\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Dashboard from \"./components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    user,\n    token,\n    playlists,\n    active_playlist\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    const code = new URL();\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        payload: _token\n      }); //set access token for the spotiywebAPI\n\n      spotify.setAccessToken(_token); //get user with spotifywebAPI\n\n      spotify.getMe().then(user => {\n        console.log('ðŸ§”', user);\n        dispatch({\n          type: 'SET_USER',\n          payload: user\n        });\n      }); //get playlsits with spotifywebAPI\n\n      spotify.getUserPlaylists().then(playlists => dispatch({\n        type: 'SET_PLAYLISTS',\n        payload: playlists\n      }));\n    }\n\n    console.log('spotify :', spotify);\n    return () => {};\n  }, [user, token, playlists]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Dashboard, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7v1bpIjZK1+fRsBlr0acknzo7fI=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/FosterOgwudu/Desktop/MyProjects/MusicFest/client/src/App.js"],"names":["React","useEffect","useState","Player","Login","getTokenFromUrl","SpotifyWebApi","useStateValue","Link","Route","Switch","Dashboard","spotify","App","user","token","playlists","active_playlist","dispatch","code","URL","hash","window","location","_token","access_token","type","payload","setAccessToken","getMe","then","console","log","getUserPlaylists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,MAAMC,OAAO,GAAG,IAAIN,aAAJ,EAAhB;;AAEA,SAASO,GAAT,GAAe;AAAA;;AAGb,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAD,EAA2CC,QAA3C,IAAuDX,aAAa,EAA1E;AAEFN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,IAAI,GAAG,IAAIC,GAAJ,EAAb;AACA,UAAMC,IAAI,GAAGhB,eAAe,EAA5B;AACAiB,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAW;AACTN,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAGH;AAFH,OAAD,CAAR,CADS,CAKT;;AACFZ,MAAAA,OAAO,CAACgB,cAAR,CAAuBJ,MAAvB,EANW,CAOX;;AACAZ,MAAAA,OAAO,CAACiB,KAAR,GAAgBC,IAAhB,CAAsBhB,IAAD,IAAU;AAACiB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBlB,IAAlB;AAC9BI,QAAAA,QAAQ,CAAC;AACTQ,UAAAA,IAAI,EAAE,UADG;AAETC,UAAAA,OAAO,EAAEb;AAFA,SAAD,CAAR;AAGC,OAJH,EARW,CAab;;AACEF,MAAAA,OAAO,CAACqB,gBAAR,GAA2BH,IAA3B,CAAkCd,SAAD,IACjCE,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAG,eADA;AAEPC,QAAAA,OAAO,EAAEX;AAFF,OAAD,CADR;AAMC;;AAIDe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBpB,OAAzB;AAIA,WAAO,MAAM,CAEZ,CAFD;AAGD,GApCQ,EAoCN,CAACE,IAAD,EAAOC,KAAP,EAAcC,SAAd,CApCM,CAAT;AAuCE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAGFD,KAAK,gBAAG,QAAC,SAAD;AAAW,MAAA,OAAO,EAAIH;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAJE;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvDQC,G;UAGsDN,a;;;KAHtDM,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport Player from \"./components/Player\";\nimport Login from \"./components/Login\";\nimport { getTokenFromUrl } from \"./utilities/Spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./utilities/StateProvider\";\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Dashboard from \"./components/Dashboard\";\n\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n \n  const [{user,token, playlists, active_playlist}, dispatch] = useStateValue();\n\nuseEffect(() => {\n  const code = new URL\n  const hash = getTokenFromUrl();\n  window.location.hash = ''\n  const _token = hash.access_token\n  if (_token){\n    dispatch({\n      type: 'SET_TOKEN',\n      payload : _token\n    });\n    //set access token for the spotiywebAPI\n  spotify.setAccessToken(_token);\n  //get user with spotifywebAPI\n  spotify.getMe().then((user) => {console.log('ðŸ§”', user ); \n    dispatch({\n    type: 'SET_USER',\n    payload: user\n  })})\n//get playlsits with spotifywebAPI\n  spotify.getUserPlaylists().then ((playlists) => \n  dispatch({\n    type : 'SET_PLAYLISTS',\n    payload: playlists\n\n  }))\n  }\n  \n\n  \n  console.log('spotify :', spotify)\n  \n  \n  \n  return () => {\n    \n  }\n}, [user, token, playlists])\n\n\n  return (\n    <div className=\"App\">\n      \n{\n  token? (<Dashboard spotify = {spotify}/>):\n  <Login />\n}\n\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}