{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FosterOgwudu\\\\Desktop\\\\MyProjects\\\\MusicFest\\\\client\\\\src\\\\components\\\\Player.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { useStateValue } from '../utilities/StateProvider';\nimport './Player.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [{\n    user,\n    token,\n    playlists,\n    active_playlist,\n    track,\n    play\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (play = true) {\n      const lyrics = axios.get('https://localhost:3001', {\n        params: {\n          track: track.title,\n          artist: track.artist\n        }\n      });\n    }\n  }, [play, track]);\n\n  function usePrevious(value) {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    }, []);\n    return ref.current;\n  }\n\n  _s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  function stop__play() {\n    dispatch({\n      type: 'SET_PLAY',\n      payload: false\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      token: token ? token : null,\n      showSaveIcon: true,\n      callback: state => {\n        if (!state.isPlaying) stop__play();\n      },\n      play: play ? play : null,\n      uris: track ? [track.uri] : [],\n      name: \"MusicFest\",\n      autoPlay: true,\n      persistDeviceSelection: true,\n      magnifySliderOnHover: true,\n      styles: {\n        activeColor: '#fff',\n        bgColor: '#333',\n        color: '#42f575',\n        loaderColor: '#fff',\n        sliderColor: '#1cb954',\n        trackArtistColor: '#ccc',\n        trackNameColor: '#fff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Player, \"pQgJLJ851BH4Si7upzXqqjubQK4=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/FosterOgwudu/Desktop/MyProjects/MusicFest/client/src/components/Player.js"],"names":["React","useState","useEffect","useRef","SpotifyPlayer","useStateValue","axios","Player","user","token","playlists","active_playlist","track","play","dispatch","lyrics","get","params","title","artist","usePrevious","value","ref","current","stop__play","type","payload","state","isPlaying","uri","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAC7B,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,eAAxB;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,GAAD,EAAwDC,QAAxD,IAAoET,aAAa,EAAvF;AAEJH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,IAAI,GAAG,IAAV,EAAe;AAEX,YAAME,MAAM,GAAGT,KAAK,CAACU,GAAN,CAAU,wBAAV,EAAoC;AAC/CC,QAAAA,MAAM,EAAC;AACHL,UAAAA,KAAK,EAAEA,KAAK,CAACM,KADV;AAEHC,UAAAA,MAAM,EAAEP,KAAK,CAACO;AAFX;AADwC,OAApC,CAAf;AAMH;AACJ,GAVQ,EAUN,CAACN,IAAD,EAAMD,KAAN,CAVM,CAAT;;AAYA,WAASQ,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,UAAMC,GAAG,GAAGnB,MAAM,EAAlB;AACAD,IAAAA,SAAS,CAAC,MAAM;AACdoB,MAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,KAFQ,EAEN,EAFM,CAAT;AAGA,WAAOC,GAAG,CAACC,OAAX;AACH;;AArBgC,KAexBH,WAfwB;;AAuB7B,WAASI,UAAT,GAAqB;AACjBV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAG,UADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACR,QAAC,aAAD;AACQ,MAAA,KAAK,EAAIjB,KAAK,GAAEA,KAAF,GAAQ,IAD9B;AAEQ,MAAA,YAAY,MAFpB;AAGQ,MAAA,QAAQ,EAAEkB,KAAK,IAAG;AAAC,YAAG,CAACA,KAAK,CAACC,SAAV,EAAoBJ,UAAU;AAAG,OAH5D;AAIQ,MAAA,IAAI,EAAEX,IAAI,GAACA,IAAD,GAAM,IAJxB;AAKQ,MAAA,IAAI,EAAED,KAAK,GAAC,CAACA,KAAK,CAACiB,GAAP,CAAD,GAAa,EALhC;AAMQ,MAAA,IAAI,EAAC,WANb;AAOQ,MAAA,QAAQ,EAAE,IAPlB;AAQQ,MAAA,sBAAsB,EAAG,IARjC;AASQ,MAAA,oBAAoB,EAAE,IAT9B;AAUQ,MAAA,MAAM,EAAE;AACJC,QAAAA,WAAW,EAAE,MADT;AAEJC,QAAAA,OAAO,EAAE,MAFL;AAGJC,QAAAA,KAAK,EAAE,SAHH;AAIJC,QAAAA,WAAW,EAAE,MAJT;AAKJC,QAAAA,WAAW,EAAE,SALT;AAMJC,QAAAA,gBAAgB,EAAE,MANd;AAOJC,QAAAA,cAAc,EAAE;AAPZ;AAVhB;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;IAxDuB7B,M;UACsDF,a;;;KADtDE,M","sourcesContent":["import React,{useState, useEffect, useRef} from 'react';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\nimport { useStateValue } from '../utilities/StateProvider';\r\nimport './Player.css';\r\nimport axios from 'axios';\r\n\r\nexport default function Player() {\r\n    const [{user,token, playlists, active_playlist, track, play}, dispatch] = useStateValue();\r\n    \r\nuseEffect(() => {\r\n    if(play = true){\r\n        \r\n        const lyrics = axios.get('https://localhost:3001', {\r\n            params:{\r\n                track: track.title,\r\n                artist: track.artist\r\n            }\r\n        })\r\n    }\r\n}, [play,track])\r\n\r\nfunction usePrevious (value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, []);\r\n    return ref.current\r\n}\r\n  \r\n    function stop__play(){\r\n        dispatch({\r\n            type : 'SET_PLAY',\r\n            payload: false\r\n        \r\n          })\r\n    }\r\n    return (\r\n        <div className='footer'>\r\n<SpotifyPlayer \r\n        token = {token? token:null}\r\n        showSaveIcon\r\n        callback={state =>{if(!state.isPlaying)stop__play()}}\r\n        play={play?play:null}\r\n        uris={track?[track.uri]:[]}\r\n        name='MusicFest'\r\n        autoPlay={true}\r\n        persistDeviceSelection= {true}\r\n        magnifySliderOnHover={true}\r\n        styles={{\r\n            activeColor: '#fff',\r\n            bgColor: '#333',\r\n            color: '#42f575',\r\n            loaderColor: '#fff',\r\n            sliderColor: '#1cb954',\r\n            trackArtistColor: '#ccc',\r\n            trackNameColor: '#fff',\r\n          }}\r\n       \r\n        />\r\n        </div>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}