{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FosterOgwudu\\\\Desktop\\\\MyProjects\\\\MusicFest\\\\client\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Search.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Avatar } from '@material-ui/core';\nimport { useStateValue } from '../utilities/StateProvider';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nexport default function Search() {\n  _s();\n\n  var _user$images$;\n\n  const [{\n    user,\n    token\n  }, dispatch] = useStateValue();\n  const [search, setSearch] = useState('');\n  const [search__result, setSearch__result] = useState([]);\n  console.log('serachResult is ', search__result);\n  useEffect(() => {\n    if (token) {\n      spotify.setAccessToken(token);\n    }\n  }, [token]);\n  useEffect(() => {\n    if (search) {\n      spotify.searchTracks(search).then(res => {\n        setSearch__result(res.body.data.items.map(track => {\n          //getting smallest image for albumUrl\n          const smallest__album__image = track.albumUrl.image.reduce((smallest, image) => {\n            if (image.height < smallest.height) {\n              return image;\n            }\n\n            return smallest;\n          }, track.album.image[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallest__album__image.url\n          };\n        }));\n      });\n    }\n\n    setSearch__result([]);\n  }, [token, search, search__result]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__left\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for Artists, Songs, or Albums\",\n          type: \"text\",\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__right\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: user === null || user === void 0 ? void 0 : (_user$images$ = user.images[0]) === null || _user$images$ === void 0 ? void 0 : _user$images$.url,\n          alt: \"FO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: user === null || user === void 0 ? void 0 : user.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__body\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"Skfzm/065rTeTuOtC6vSuo+/cSw=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/FosterOgwudu/Desktop/MyProjects/MusicFest/client/src/components/Search.js"],"names":["React","useState","useEffect","SearchIcon","Avatar","useStateValue","SpotifyWebApi","spotify","Search","user","token","dispatch","search","setSearch","search__result","setSearch__result","console","log","setAccessToken","searchTracks","then","res","body","data","items","map","track","smallest__album__image","albumUrl","image","reduce","smallest","height","album","artist","artists","name","title","uri","url","e","target","value","images","display_name"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport './Search.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {Avatar} from '@material-ui/core'\r\nimport { useStateValue } from '../utilities/StateProvider';\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\nexport default function Search() {\r\n    const [{user,token}, dispatch] = useStateValue();\r\n    const [search, setSearch] = useState('')\r\n    const [search__result, setSearch__result] = useState([])\r\n    console.log('serachResult is ', search__result)\r\n\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            spotify.setAccessToken(token); \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n   \r\n    if(search){\r\n    \r\n        spotify.searchTracks(search).then((res) =>{\r\n           setSearch__result(  res.body.data.items.map(track =>{\r\n                 //getting smallest image for albumUrl\r\n                 const smallest__album__image = track.albumUrl.image.reduce((smallest, image) =>{\r\n                     if(image.height < smallest.height) {\r\n                         return image\r\n                     }\r\n                     return smallest\r\n                 },track.album.image[0])\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri : track.uri,\r\n                    albumUrl: smallest__album__image.url\r\n                }\r\n             }))\r\n        })\r\n    }\r\n    setSearch__result([])\r\n    }, [token, search, search__result])\r\n    \r\n\r\n    return (\r\n        <div className= 'search'> \r\n            <div className=\"search__head\">\r\n                <div className=\"search__left\">\r\n                        <SearchIcon/>\r\n                        <input placeholder= 'Search for Artists, Songs, or Albums' type = 'text' onChange={e =>{setSearch(e.target.value)}}/>\r\n                </div>\r\n            <   div className=\"search__right\">\r\n                        <Avatar src={user?.images[0]?.url} alt='FO'/>\r\n                        <h4>{user?.display_name}</h4>\r\n                </div> \r\n            </div>\r\n            \r\n            <div className=\"search__body\">\r\n                <h2>Search Results</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}